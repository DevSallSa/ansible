---
# TODO: install dotfiles
# - delete config folder to be stowed
- name: Cleanup before installing dotfiles
  args:
    executable: /usr/bin/bash
  shell: |
    old_configs=(Chiaki alacritty cabal firejail gdb kitty logid npm nvim \
                  python tmux touchegg yarn zsh .clang-format aliases \ 
                  shellcheckrc starship.toml)
    mkdir -p /tmp/old-configs
    for config in "${old_configs[@]}"
    do
      cp -r "{{ ansible_env.HOME }}/.config/$config" /tmp/old-configs 2> /dev/null
    done

    old_files=( "{{ item }}" )
    for file in "${old_files[@]}"
    do
      cp -r "$file" /tmp/old-configs 2> /dev/null
    done

    # Bad practices here!
    #
    # an error will occur if one of the old config doesn't exist and will
    # fail the tasks. But I need to bypass this so the tasks will succeed.
    # I'm faking the success with just an echo
    echo "Yes I know what I'm doing here. So Let's gooooo!!!!!"
  tags: dotfiless
  with_fileglob:
    - "{{ ansible_env.HOME }}/.zcompdump*"
    - "{{ ansible_env.HOME }}/.zsh_*"
    - "{{ ansible_env.HOME }}/.yarn*"

- name: Download dotfiles
  ansible.builtin.git:
    repo: git@github.com:DevSallSa/.dotfiles.git
    dest: "{{ ansible_env.HOME }}/.dotfiles"
  tags: dotfiless
...
