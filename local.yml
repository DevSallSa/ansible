---
- hosts: localhost

  # tell ansible to not use ssh
  connection: local

  vars:
    git_config_user_email: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      61636135343362353438343934656666316338373265326430646365636531383633316665353338
      3364613765643336373036386666373061396331653065340a386331343161383663303331326635
      33343364333636306438323066306566656633663135363130353561356136356531646139643534
      3161393939343035330a633130626262636366363863356534356235353137666565653764636465
      31366565623436363734383766353137656636636166376337656264643963623561
    git_config_user_name: "DevSallSa"
    git_config_core_editor: "vim"
    git_config_core_autocrlf: "input"
    git_config_init_default_branch: "main"
    git_config_pull_rebase: "false"
    git_config_alias_adog: "log --all --decorate --oneline  --graph"
    ssh_src_path: "./.ssh/"
    ssh_dest_path: "{{ ansible_env.HOME }}/.ssh/"
    ansible_tmp_path: "/tmp/ansible"
    fonts_path: "{{ ansible_env.HOME }}/.local/share/fonts"
    neovim_file: "{{ ansible_env.HOME }}/Applications/nvim.appimage"

  # Tasks to perform first
  # tasks to complete before running roles
  pre_tasks:
    # update cache for arch linux
    - name: pre-run | update package cache (arch)
      # use root profile to perform tasks
      become: true
      # In case of running specific tasks
      tags:
        - install
        - core
      pacman: update_cache=yes
      changed_when: false
      when: ansible_distribution == "Archlinux"

    # update cache for Debian and derivatives....
    # For getting system info with ansible,
    # $ ansible localhost -m gather_facts
    - name: pre-run | update package cache (Debian, Pop, Ubuntu,...)
      become: true
      tags:
        - install
        - core
      apt: update_cache=yes
      changed_when: false
      when: ansible_distribution in ["Pop!_OS", "Ubuntu", "Debian"]

  tasks:
    - import_tasks: tasks/ansible.yml
    - import_tasks: tasks/core-setup.yml
    - import_tasks: tasks/ssh.yml
    - import_tasks: tasks/zsh-setup.yml
    - import_tasks: tasks/git.yml
    - import_tasks: tasks/prompt-setup.yml
    - import_tasks: tasks/kitty.yml
    - import_tasks: tasks/fonts-setup.yml
    - import_tasks: tasks/neovim.yml
    - import_tasks: tasks/nodejs.yml
    - import_tasks: tasks/nodejs-packages.yml
    - import_tasks: tasks/sdkman.yml
    - import_tasks: tasks/brave.yml
    - import_tasks: tasks/productivity.yml
    - import_tasks: tasks/utils.yml
    - import_tasks: tasks/entertainment.yml
    - import_tasks: tasks/dotfiles-setup.yml
    - import_tasks: tasks/desktop-setup.yml
    - import_tasks: tasks/docker-setup.yml

    - name: "Configuration complete. Notifying user..."
      shell: |
        cp "{{ item }}" "{{ ansible_tmp_path }}"
        notify-send -u CRITICAL -i "{{ ansible_tmp_path }}/Ansible_logo.svg" \
                "Configuration complete"\
                "Please reboot your system to be ready to rock \!"
      tags: always
      with_items:
        - files/Ansible_logo.svg
...
