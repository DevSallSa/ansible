---
- hosts: localhost
  # In case of running specific tasks
  tags: always

  # tell ansible to not use ssh
  connection: local
  
  # use root profile to perform tasks
  become: true

  # Tasks to perform first
  # tasks to complete before running roles
  pre_tasks:
    
    # update cache for arch linux
    - name: pre-run | update package cache (arch)
      tags: always
      pacman: update_cache=yes
      changed_when: False
      when: ansible_distribution == "Archlinux"
    
    # update cache for Debian and derivatives....
    # For getting system info with ansible,
    # $ ansible localhost -m gather_facts
    - name: pre-run | update package cache (Debian, Pop, Ubuntu,...)
      tags: always
      apt: update_cache=yes
      changed_when: False
      when: ansible_distribution in ["Pop!_OS", "Ubuntu", "Debian"]

# all machine will have the "base" role and
# will execute the tasks related to this role
# - hosts: all
#   tags: base
#   become: true
#   roles:
#     - base

# if the machine belong to the "server" roles
# - hosts: server
#   tags: server
#   become: true
#   roles:
#     - server


  tasks:
    - name: Install packages
      apt:
        name: 
          - python3-psutil
          - aptitude
          - htop
          - tmux
          - vim
      when: ansible_distribution in ["Pop!_OS", "Ubuntu", "Debian"]

    - name: Copy wallpaper file
      copy:
        src: files/pantherflat.jpg
        dest: /usr/share/backgrounds/ansible-wallpaper.jpg
        owner: root
        group: root

    # set wallpaper for Gnome on Pop_OS!
    # Use dconf-cli for dumping dconf value
    # or just chech dconf-editor
    - name: Set wallpaper for Pop-COSMIC
      become_user: "{{ lookup('env', 'USER') }}"  
      dconf: 
        key: "/org/gnome/desktop/background/picture-uri-dark"
        value: "'file:///usr/share/backgrounds/ansible-wallpaper.jpg'"

    - name: Set wallpaper position
      become_user: "{{ lookup('env', 'USER') }}"  
      dconf: 
        key: "/org/gnome/desktop/background/picture-options"
        value: "'zoom'"

    # TODO: install dotfiles
    - name: Set bash config
      copy:
        src: files/bashrc
        dest: "{{ lookup('env', 'HOME') }}/.bashrc"
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"

